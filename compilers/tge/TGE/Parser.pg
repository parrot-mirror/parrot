grammar TGE::Parser;

token start { ^ <TGE::Parser::statements> $ }

rule statements { <TGE::Parser::transrule>* }

rule transrule {
    transform <TGE::Parser::name> 
    \( <TGE::Parser::type> \)
    <TGE::Parser::parent>?
    <TGE::Parser::action>
}
    
rule parent {
    \:applyto \( \'(<-[']>*)\' \)
}

rule action {
    \{ (<-[}]>*) \}
}

token type {
    [ \:\: ]? \w+ [ \:\: \w+ ]*
}

token name { \w+ }

token ws {
    [ \s+
    | \# \N*
    ]*
}
