# Copyright (C) 2001-2007, The Perl Foundation.
# $Id$

=head1 NAME

tools/build/revision_c.pl

=head1 DESCRIPTION

Creates F<src/revision.c> with current rev number taken from
F<.svn/entries> or F<.svk/entries> and config rev number of last
Parrot configure run.

=head1 SEE ALSO

F<config/gen/revision.pl>,
F<lib/Parrot/Revision.pm>,
F<include/parrot/config.h>

=cut

use warnings;
use strict;
use lib qw{lib . ../lib ../../ lib};
use Parrot::Revision::Utils qw(
    get_revision_numbers
    print_src_revision_c
);

#my $current = 0;
#my $config = 0;
#if (-e 'DEVELOPING') {
#    $current = $Parrot::Revision::current;
#    eval 'use Parrot::Config; $config = $PConfig{revision};';
#}
my ($current, $config) = get_revision_numbers();
exit 1 unless ( $current == $config );

print_src_revision_c($current, $config, $0);

#print <<"EOF";
#/* ex: set ro:
# * !!!!!!!   DO NOT EDIT THIS FILE   !!!!!!!
# *
# * This file is generated automatically by $0.
# *
# * Any changes made here will be lost!
# *
# */
#
#/* HEADERIZER HFILE: none */
#/* HEADERIZER STOP */
#
##include "parrot/config.h"
#
#/* also in "parrot/embed.h" */
#PARROT_API int Parrot_revision(void);
#/* also in "parrot/misc.h" */
#PARROT_API int Parrot_config_revision(void);
#
#int Parrot_revision(void)
#{
#    return $current;
#}
#
#int Parrot_config_revision(void)
#{
#    return $config;
#}
#
#/*
# * Local variables:
# *   c-file-style: "parrot"
# * End:
# * vim: expandtab shiftwidth=4:
# */
#EOF

# Local Variables:
#   mode: cperl
#   cperl-indent-level: 4
#   fill-column: 100
# End:
# vim: expandtab shiftwidth=4:
