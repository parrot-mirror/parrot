# Copyright (C) 2005-2008, The Perl Foundation.
# $Id$

# Makefile for languages/regex
HLLNAME	      = regex-compiler

# Set up directories
PMC_DIR       = pmc
BUILD_DIR     = @build_dir@
BIN_DIR       = @bin_dir@
LIB_DIR       = @lib_dir@
DOC_DIR       = @doc_dir@
MANDIR	      = @mandir@

# set up extensions
LOAD_EXT      = @load_ext@
O             = @o@

# Set up commands
#IF(parrot_is_shared and !(cygwin|win32)):export LD_RUN_PATH := @blib_dir@:$(LD_RUN_PATH)
#IF(darwin):export DYLD_LIBRARY_PATH := @blib_dir@:$(DYLD_LIBRARY_PATH)
PARROT        = ../../parrot@exe@
PBC_TO_EXE    = ../../pbc_to_exe@exe@
PERL          = @perl@
RM_F          = @rm_f@
YAPP          = yapp
CP            = @cp@
MKPATH        = @mkpath@
#IF(has_pod2man):POD2MAN       = pod2man
BUILD_DYNPMC  = $(PERL) $(BUILD_DIR)/tools/build/dynpmc.pl
PARROT_DYNEXT = $(BUILD_DIR)/runtime/parrot/dynext
PARROT_LIB    = $(BUILD_DIR)/runtime/parrot/library
RECONFIGURE   = $(PERL) $(BUILD_DIR)/tools/dev/reconfigure.pl
#IF(darwin):
#IF(darwin):# MACOSX_DEPLOYMENT_TARGET must be defined for OS X compilation/linking
#IF(darwin):export MACOSX_DEPLOYMENT_TARGET := @osx_version@

PMCS = match matchrange

PMC_SOURCES = $(PMC_DIR)/match.pmc $(PMC_DIR)/matchrange.pmc

build : lib/Regex/Grammar.pm $(PMC_DIR)/match_group$(LOAD_EXT) regex-compiler.pbc

all : build Makefile regex-compiler@exe@ installable

# regenerate the Makefile
Makefile: config/makefiles/root.in
	cd $(BUILD_DIR) && $(RECONFIGURE) --step=gen::languages --languages=regex

lib/Regex/Grammar.pm : lib/Regex/Grammar.yp
	$(YAPP) -s -m Regex::Grammar -o $@ lib/Regex/Grammar.yp

regex-compiler.pbc : regex-compiler.pir
	$(PARROT) -o regex-compiler.pbc regex-compiler.pir

regex-compiler@exe@ : regex-compiler.pbc
	$(PBC_TO_EXE) regex-compiler.pbc

$(PMC_DIR)/match_group$(LOAD_EXT): $(PMC_SOURCES)
	cd $(PMC_DIR) && $(BUILD_DYNPMC) generate $(PMCS)
	cd $(PMC_DIR) && $(BUILD_DYNPMC) compile $(PMCS)
	cd $(PMC_DIR) && $(BUILD_DYNPMC) linklibs $(PMCS)
	cd $(PMC_DIR) && $(BUILD_DYNPMC) copy --destination=$(PARROT_DYNEXT) $(PMCS)

installable : installable_regex-compiler@exe@ regex-compiler.pbc
	$(CP) installable_regex-compiler@exe@ $(BUILD_DIR)
	$(CP) regex-compiler.pbc $(PARROT_LIB)/regex-compiler.pbc

installable_regex-compiler@exe@: regex-compiler.pbc
	$(PBC_TO_EXE) regex-compiler.pbc --install

# TODO: test for installed libs, rename build_dir. basic run for missing libs
test-installable : installable
	./installable_$(HLLNAME)@exe@ "(a+)?a" "aa"

install : installable
	$(CP) installable_$(HLLNAME)@exe@ $(DESTDIR)$(BIN_DIR)/parrot-$(HLLNAME)@exe@
	$(CP) regex-compiler.pbc $(DESTDIR)$(LIB_DIR)/parrot/library/regex-compiler.pbc
#IF(has_pod2man):	$(POD2MAN) regex-compiler.pir > $(DESTDIR)$(MANDIR)/man1/parrot-$(HLLNAME).1
	$(MKPATH) $(DESTDIR)$(DOC_DIR)/languages/regex
	$(CP) $(DOCS) $(DESTDIR)$(DOC_DIR)/languages/regex

# Note: These tend to be in the order of the latest thing I've been
# working on to the oldest, so that I see the failures quicker.
.PHONY: test
test : build
	cd .. && $(PERL) t/harness --languages=regex

# This is a TODO test -- currently, it loops forever. It will require
# adding a check to the matcher that it is making progress. Or
# something. I need to look at this again.
#
#	$(PERL) test.pl t/basic/infinite.t

CLEANUPS = \
  "*.pbc" \
  $(PMC_DIR)/*.h \
  $(PMC_DIR)/*.c \
  $(PMC_DIR)/*.dump \
  $(PMC_DIR)/*$(O) \
  $(PMC_DIR)/*$(LOAD_EXT) \
#IF(win32):  $(PMC_DIR)/*.exp \
#IF(win32):  $(PMC_DIR)/*.ilk \
#IF(win32):  $(PMC_DIR)/*.manifest \
#IF(win32):  $(PMC_DIR)/*.pdb \
#IF(win32):  $(PMC_DIR)/*.lib \
  test_regex.pir \
  test_regex.pbc \
  $(PARROT_LIB)/regex-compiler.pbc

clean:
	$(RM_F) $(CLEANUPS)

realclean: clean
	$(RM_F) Makefile

distclean: realclean

#
# Local variables:
# mode: makefile
# ex: ft=make
# End:
