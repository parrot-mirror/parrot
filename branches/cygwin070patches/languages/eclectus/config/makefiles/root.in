# Copyright (C) 2007-2008, The Perl Foundation.
# $Id$

# Makefile for languages/eclectus

# configuration settings
BUILD_DIR       = @build_dir@
LOAD_EXT        = @load_ext@
O               = @o@

# Set up commands
PARROT          = ../../parrot@exe@
PERL            = @perl@
RM_F            = @rm_f@
RECONFIGURE     = $(PERL) @build_dir@/tools/dev/reconfigure.pl
BUILD_DYNPMC    = $(PERL) @build_dir@/tools/build/dynpmc.pl
#CONDITIONED_LINE(darwin):
#CONDITIONED_LINE(darwin):# MACOSX_DEPLOYMENT_TARGET must be defined for OS X compilation/linking
#CONDITIONED_LINE(darwin):export MACOSX_DEPLOYMENT_TARGET := @osx_version@

# Set up directories
PARROT_DYNEXT   = @build_dir@/runtime/parrot/dynext
PMC_DIR         = src/pmc

ECLECTUS_GROUP  = $(PMC_DIR)/eclectus_group@load_ext@
PMCS            = \
    eclectusboolean \
    eclectuscharacter \
    eclectusemptylist \
    eclectusfixnum \
    eclectuspair \
    eclectusstring \
    eclectusvector
PMC_SOURCES     = \
    $(PMC_DIR)/eclectusboolean.pmc \
    $(PMC_DIR)/eclectuscharacter.pmc \
    $(PMC_DIR)/eclectusemptylist.pmc \
    $(PMC_DIR)/eclectusfixnum.pmc \
    $(PMC_DIR)/eclectuspair.pmc \
    $(PMC_DIR)/eclectusstring.pmc \
    $(PMC_DIR)/eclectusvector.pmc
DOCS = MAINTAINER README docs/eclectus.pod

# The default target
all: build

help :
	@echo ""
	@echo "Following targets are available for the user:"
	@echo ""
	@echo "  all:               Builds the dynamic PMCSs needed by Eclectus."
	@echo "                     This is the default target."
	@echo "  installable:       Create self-hosting bins and libs."
	@echo "  install:           Install the installable targets and docs."
	@echo ""
	@echo "Testing:"
	@echo "  test:              Run the test suite."
	@echo "  test-installable:  Test self-hosting targets."
	@echo "  testclean:         Clean up test results."
	@echo ""
	@echo "Cleaning:"
	@echo "  clean:             Clean up temporary files."
	@echo "  realclean:         Clean up generated files."
	@echo "  distclean:         Removes also anything built, in theory"
	@echo ""
	@echo "Misc:"
	@echo "  help:              Print this help message."
	@echo ""

# regenerate the Makefile
Makefile: config/makefiles/root.in
	cd $(BUILD_DIR) && $(RECONFIGURE) --step=gen::languages --languages=$(LANG)

# Compilation:
build: $(ECLECTUS_GROUP) driver_nqp.pbc

$(ECLECTUS_GROUP): $(PARROT) $(PMC_SOURCES)
	cd $(PMC_DIR) && $(BUILD_DYNPMC) generate $(PMCS)
	cd $(PMC_DIR) && $(BUILD_DYNPMC) compile $(PMCS)
	cd $(PMC_DIR) && $(BUILD_DYNPMC) linklibs $(PMCS)
	cd $(PMC_DIR) && $(BUILD_DYNPMC) copy --destination=$(PARROT_DYNEXT) $(PMCS)

driver_nqp.pbc: src/builtins/all.pbc driver_nqp.pir
	$(PARROT) -o driver_nqp.pbc driver_nqp.pir

src/builtins/all.pbc: src/builtins/all.pir
	$(PARROT) -o src/builtins/all.pbc src/builtins/all.pir

# TODO: rename build_dir. basic run for missing libs
test-installable : installable
	./installable_$(LANG)@exe@ tests-driver.scm

install : installable
	cp installable_$(LANG)@exe@ $(DESTDIR)$(BIN_DIR)/parrot-$(LANG)@exe@
	cd $(PMC_DIR) && $(BUILD_DYNPMC) copy "--destination=$(DESTDIR)$(LIB_DIR)/parrot/dynext" $(PMCS)
	$(POD2MAN) docs/eclectus.pod > $(DESTDIR)$(MANDIR)/man1/parrot-$(LANG).1
	mkdir $(DESTDIR)$(DOC_DIR)/languages/$(LANG)
	cp $(DOCS) $(DESTDIR)$(DOC_DIR)/languages/$(LANG)

$(LANG)@exe@: driver_nqp.pbc
	$(PBC_TO_EXE) driver_nqp.pbc
	mv driver_nqp@exe@ $(LANG)@exe@

installable : installable_$(LANG)@exe@ $(ECLECTUS_GROUP)
	cp installable_$(LANG)@exe@ $(BUILD_DIR)

installable_$(LANG)@exe@ : driver_nqp.pbc
	$(PBC_TO_EXE) driver_nqp.pbc --install
	mv driver_nqp@exe@ installable_$(LANG)@exe@


# cleaning up

clean: dynext-clean test-clean
	$(RM_F) \
  stst.out \
  driver_nqp.pbc \
  src/builtins/all.pbc

dynext-clean:
	$(RM_F) \
  $(PMC_DIR)/*.h \
  $(PMC_DIR)/*.c \
  $(PMC_DIR)/*.dump \
  $(PMC_DIR)/*$(O) \
  $(PMC_DIR)/*$(LOAD_EXT) \
  $(PMC_DIR)/*.exp \
  $(PMC_DIR)/*.ilk \
  $(PMC_DIR)/*.manifest \
  $(PMC_DIR)/*.pdb \
  $(PMC_DIR)/*.lib \
  installable_$(LANG)@exe@ \
  $(LANG)@exe@ \

realclean: clean
	$(RM_F) Makefile

# testing
test: build
	$(PERL) t/harness

test-clean:
	$(RM_F) t/*.nqp
	$(RM_F) t/*.pir

distclean: realclean

#
# Local variables:
# mode: makefile
# ex: ft=make
# End:
